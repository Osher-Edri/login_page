{
  "_args": [
    [
      {
        "raw": "firmata-io@^2.0.0",
        "scope": null,
        "escapedName": "firmata-io",
        "name": "firmata-io",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\osher\\Documents\\worketest\\p.s.osh\\node_modules\\firmata"
    ]
  ],
  "_from": "firmata-io@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "firmata-io@2.0.0",
  "_location": "/firmata-io",
  "_nodeVersion": "10.14.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/firmata-io_2.0.0_1547582092185_0.8562443150525882"
  },
  "_npmUser": {
    "name": "rwaldron",
    "email": "waldron.rick@gmail.com"
  },
  "_npmVersion": "lerna/3.10.5/node@v10.14.2+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "firmata-io@^2.0.0",
    "scope": null,
    "escapedName": "firmata-io",
    "name": "firmata-io",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/firmata"
  ],
  "_resolved": "https://registry.npmjs.org/firmata-io/-/firmata-io-2.0.0.tgz",
  "_shasum": "27d1c3447abb9790c23692e9948e5d7e8b163aab",
  "_shrinkwrap": null,
  "_spec": "firmata-io@^2.0.0",
  "_where": "C:\\Users\\osher\\Documents\\worketest\\p.s.osh\\node_modules\\firmata",
  "author": {
    "name": "Julian Gautier"
  },
  "bugs": {
    "url": "https://github.com/firmata/firmata.js/issues"
  },
  "dependencies": {},
  "description": "Firmata protocol implementation",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-9wCgc6KYFT6xZ4RLCTLM00G3tpVu0BHhufRiipgCplG00lJa+lQ2cY5Dpfkc1RKMJXXQTzknIVZC5vJ4I3Xy/g==",
    "shasum": "27d1c3447abb9790c23692e9948e5d7e8b163aab",
    "tarball": "https://registry.npmjs.org/firmata-io/-/firmata-io-2.0.0.tgz",
    "fileCount": 6,
    "unpackedSize": 76264,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcPjqMCRA9TVsSAnZWagAAaFYP/RNsC6uTdfTzrfhTgX5z\nUg85ZxWex1nyKLQJE3f6+IBR+oT26mHJhnV2dDtBFf2LaG7n4PKzHRRwJLqW\niq5cccgxyFgC7KjcakmsWhaZFTllA43pguTR9pEOmAwK9Ui1GZcoqjyv/ieb\nT6ddk+r1XehJ+yRTJEllSiA0hv+Jyleg5TkuJcb0cX1RsmtVA9w0GdbAANbE\nvTwaZ3DfySB/UDJgf4NdzeVkTZsvfsc5bWTdS3W6vk9R4wxOONr4OIH9KwYh\njmPXFL8XyIsS/eiTbxHmuZ5I+uu4nlptGpTFFsvUZ3wZGvalcFxWYiI/PZPY\nlvJFv902Jy1hQl0ModleR3m0gOlgkfKeozskYqdGpL2Rd5LzRXRCCJ4WCDuJ\nOIL7KQdIqlkSyb/GQgKLz2mH57a9no24EMGtHEkFHReWYlrFhqInIRHhcbFv\ndJ3eu4CH8MBU83WouQOmEPxCFV3l3sW8I2HmsEVoMqAi6wM85Xy7aHmk6jFc\niNbEgSWee0DCI2g4Jvox3IXycFeuog1jmGeDw2aEi4bAXvqsKWVyYOvAWbzq\n/KMoWPfZUa9Zpcdjd6dDUCHm9KkjPktPdqapWdLbYzb8C6iq9CyTKkrYBMDR\nbWFeVXPo4ixnxZSa9nQ8//6k9u73ulJDTvEROF6Ftx7OrbS9S1sebKXr5aR6\n1s4k\r\n=ZJIj\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "7ddbf3e14e360706fa3f64c61926abc11c4f0116",
  "homepage": "http://www.github.com/firmata/firmata.js",
  "license": "MIT",
  "main": "lib/firmata",
  "maintainers": [
    {
      "name": "rwaldron",
      "email": "waldron.rick@gmail.com"
    }
  ],
  "name": "firmata-io",
  "optionalDependencies": {},
  "readme": "# Firmata-io\n\nThis is Firmata.js without a default `Transport`.\n\n# Install\n\nInstall Firmata-io:\n\n```sh\nnpm install firmata-io --save\n```\n\nInstall a Transport: \n\n\n```sh\nnpm install serialport --save\n```\n\n## Transports\n\n- Serialport\n- Etherport\n\n# Basic Usage\n\n## With A _Transport Class_\n\nHere's an example using the `Serialport` class:\n\n```js\n// Require your Transport!\nconst Serialport = require(\"serialport\"); \n// Pass the Transport class to the transport binding \n// function exported by firmata-io. The transport binding\n// function will return the Firmata class object with\n// the Transport class bound in its scope. \nconst Firmata = require(\"firmata-io\")(Serialport);\n\nFirmata.requestPort((error, port) => {\n  if (error) {\n    console.log(error);\n    return;\n  }\n\n  const board = new Firmata(port.comName);\n\n  board.on(\"close\", () => {\n    // Unplug the board to see this event!\n    console.log(\"Closed!\");\n  });\n});\n```\n\n## With A _Transport Instance_\n\nHere's an example using a `Serialport` instance:\n\n```js\n// Require your Transport!\nconst Serialport = require(\"serialport\");\n// Get the Firmata class without a bound transport. \nconst Firmata = require(\"firmata-io\").Firmata;\n\nSerialport.list().then(ports => {\n  // Figure which port to use...\n  const port = ports.find(port => port.manufacturer.startsWith(\"Arduino\"));\n  \n  // Instantiate an instance of your Transport class\n  const transport = new Serialport(port.comName);\n\n  // Pass the new instance directly to the Firmata class\n  const board = new Firmata(transport);\n\n  board.on(\"close\", () => {\n    // Unplug the board to see this event!\n    console.log(\"Closed!\");\n  });\n});\n```\n\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2011-2015 Julian Gautier <julian.gautier@alumni.neumont.edu>\\\nCopyright (c) 2015-2019 The Firmata.js Authors (see AUTHORS.md)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/firmata/firmata.js.git"
  },
  "version": "2.0.0"
}
