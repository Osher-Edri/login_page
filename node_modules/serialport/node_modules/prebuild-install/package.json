{
  "_args": [
    [
      {
        "raw": "prebuild-install@^4.0.0",
        "scope": null,
        "escapedName": "prebuild-install",
        "name": "prebuild-install",
        "rawSpec": "^4.0.0",
        "spec": ">=4.0.0 <5.0.0",
        "type": "range"
      },
      "C:\\Users\\osher\\Documents\\worketest\\p.s.osh\\node_modules\\serialport"
    ]
  ],
  "_from": "prebuild-install@^4.0.0",
  "_hasShrinkwrap": false,
  "_id": "prebuild-install@4.0.0",
  "_location": "/serialport/prebuild-install",
  "_nodeVersion": "10.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/prebuild-install_4.0.0_1525517406108_0.28408013702994395"
  },
  "_npmUser": {
    "name": "ralphtheninja",
    "email": "ralphtheninja@riseup.net"
  },
  "_npmVersion": "6.0.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "prebuild-install@^4.0.0",
    "scope": null,
    "escapedName": "prebuild-install",
    "name": "prebuild-install",
    "rawSpec": "^4.0.0",
    "spec": ">=4.0.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/serialport"
  ],
  "_resolved": "https://registry.npmjs.org/prebuild-install/-/prebuild-install-4.0.0.tgz",
  "_shasum": "206ce8106ce5efa4b6cf062fc8a0a7d93c17f3a8",
  "_shrinkwrap": null,
  "_spec": "prebuild-install@^4.0.0",
  "_where": "C:\\Users\\osher\\Documents\\worketest\\p.s.osh\\node_modules\\serialport",
  "author": {
    "name": "Mathias Buus",
    "url": "@mafintosh"
  },
  "bin": {
    "prebuild-install": "./bin.js"
  },
  "bugs": {
    "url": "https://github.com/prebuild/prebuild-install/issues"
  },
  "contributors": [
    {
      "name": "Julian Gruber",
      "email": "julian@juliangruber.com",
      "url": "https://github.com/juliangruber"
    },
    {
      "name": "Brett Lawson",
      "email": "brett19@gmail.com",
      "url": "https://github.com/brett19"
    },
    {
      "name": "Pieter Hintjens",
      "email": "ph@imatix.com",
      "url": "https://github.com/hintjens"
    },
    {
      "name": "Lars-Magnus Skog",
      "email": "ralphtheninja@riseup.net",
      "url": "https://github.com/ralphtheninja"
    },
    {
      "name": "Jesús Leganés Combarro",
      "email": "piranna@gmail.com",
      "url": "https://github.com/piranna"
    },
    {
      "name": "Mathias Küsel",
      "email": "mathiask@hotmail.de",
      "url": "https://github.com/mathiask88"
    },
    {
      "name": "Lukas Geiger",
      "email": "lukas.geiger94@gmail.com",
      "url": "https://github.com/lgeiger"
    }
  ],
  "dependencies": {
    "detect-libc": "^1.0.3",
    "expand-template": "^1.0.2",
    "github-from-package": "0.0.0",
    "minimist": "^1.2.0",
    "mkdirp": "^0.5.1",
    "node-abi": "^2.2.0",
    "noop-logger": "^0.1.1",
    "npmlog": "^4.0.1",
    "os-homedir": "^1.0.1",
    "pump": "^2.0.1",
    "rc": "^1.1.6",
    "simple-get": "^2.7.0",
    "tar-fs": "^1.13.0",
    "tunnel-agent": "^0.6.0",
    "which-pm-runs": "^1.0.0"
  },
  "description": "A command line tool to easily install prebuilt binaries for multiple version of node/iojs on a specific platform",
  "devDependencies": {
    "a-native-module": "^1.0.0",
    "nock": "^9.2.5",
    "nsp": "^2.3.0",
    "rimraf": "^2.5.2",
    "standard": "^10.0.3",
    "tape": "^4.5.1",
    "verify-travis-appveyor": "^2.0.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-7tayxeYboJX0RbVzdnKyGl2vhQRWr6qfClEXDhOkXjuaOKCw2q8aiuFhONRYVsG/czia7KhpykIlI2S2VaPunA==",
    "shasum": "206ce8106ce5efa4b6cf062fc8a0a7d93c17f3a8",
    "tarball": "https://registry.npmjs.org/prebuild-install/-/prebuild-install-4.0.0.tgz",
    "fileCount": 16,
    "unpackedSize": 22667,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa7YxfCRA9TVsSAnZWagAAbKkP/jC2Z6E/VHaZQseKsQVm\neUoLvoT1259vJ2nPX2+xiQukmUINZhab6AKbU0L4+Nzyec/LlVBVey6/Lq4t\n1JLhbk/ht/hfi0fXAtOVpYUZ0B3ENrh6UXvAEb5h2FCxLo1xbD3jn0lbtad4\nowUjt56SrhDA08y1GM2OIhrBHz4uGFAh/QiG5mqXXJWDK2eQRYB05kJrPDSg\nfVe9XPWPjvPucksYeS76W7lFrKxCXdFxlHCMRZjv1z61zYo6zYLMkjpP4y1G\nND8mlPKoO4TcyPFqJDL3SSt+9Uv8Lyo2fT4RjbayAI+ZFdT3PGihUQsM6JrR\n6y9V4jJdayF6GZpy+DpcrIS7qpLafyFeQlQvX05T16JthcQEl51FLwX+0p1+\nnhB2q3ARX2XGXCbahHlOk1xWUux1oA/UggoWbeVomSu1DChzscvSN+/jyk5Y\nUvY0omZ2zhVN3POtdLOlrfJ1ljwmOAReP+1JdEwS4WK8F4vXbSbR01Dqz7rj\nEebYwjslYCdvDTynP6XIX6ZnpdnZPE3DgzPt6T460z++o/kp2P5TRsvG8XDI\n6YQvomXNcGkGsLUfeYHrbEkkWkwFM3KYAbXtqdp87GxgNBiY9UoQxnkPJ1Jb\n6LZTbZunHTg3pY66wshF0OmisdK8oqo+OMEpouPbBM020vUIYy72jHAaXv/f\n/Hpl\r\n=tLSV\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4"
  },
  "gitHead": "062cb4153dd9b08e39d8ae34a66052340ea226e8",
  "homepage": "https://github.com/prebuild/prebuild-install",
  "keywords": [
    "prebuilt",
    "binaries",
    "native",
    "addon",
    "module",
    "c",
    "c++",
    "bindings",
    "devops"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "mafintosh",
      "email": "mathiasbuus@gmail.com"
    },
    {
      "name": "mathiask",
      "email": "mathiask@hotmail.de"
    },
    {
      "name": "piranna",
      "email": "piranna@gmail.com"
    },
    {
      "name": "ralphtheninja",
      "email": "ralphtheninja@riseup.net"
    },
    {
      "name": "vweevers",
      "email": "dev@vincentweevers.nl"
    }
  ],
  "name": "prebuild-install",
  "optionalDependencies": {},
  "readme": "# prebuild-install\n\n> A command line tool to easily install prebuilt binaries for multiple version of node/iojs on a specific platform.\n\n[![npm](https://img.shields.io/npm/v/prebuild-install.svg)](https://www.npmjs.com/package/prebuild-install)\n![Node version](https://img.shields.io/node/v/prebuild-install.svg)\n[![Build Status](https://travis-ci.org/prebuild/prebuild-install.svg?branch=master)](https://travis-ci.org/prebuild/prebuild-install)\n[![Build status](https://ci.appveyor.com/api/projects/status/6v6hxxwgjrr99pc8/branch/master?svg=true)](https://ci.appveyor.com/project/mathiask88/prebuild-install)\n[![david](https://david-dm.org/prebuild/prebuild-install.svg)](https://david-dm.org/prebuild/prebuild-install)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n\n`prebuild-install` supports installing prebuilt binaries from GitHub by default.\n\n## Usage\n\nChange your package.json install script to:\n```json\n{\n  \"scripts\": {\n    \"install\": \"prebuild-install || node-gyp rebuild\"\n  }\n}\n```\n\n### Requirements\n\nYou need to provide prebuilds made by [`prebuild`](https://github.com/prebuild/prebuild).\n\n### Help\n```\nprebuild-install [options]\n\n  --download    -d  [url]       (download prebuilds, no url means github)\n  --target      -t  version     (version to install for)\n  --runtime     -r  runtime     (Node runtime [node or electron] to build or install for, default is node)\n  --path        -p  path        (make a prebuild-install here)\n  --token       -T  gh-token    (github token for private repos)\n  --build-from-source           (skip prebuild download)\n  --verbose                     (log verbosely)\n  --libc                        (use provided libc rather than system default)\n  --debug                       (set Debug or Release configuration)\n  --version                     (print prebuild-install version and exit)\n ```\n\nWhen `prebuild-install` is run via an `npm` script, options\n`--build-from-source`, `--debug` and `--download`, may be passed through via\narguments given to the `npm` command.\n\n### Private Repositories\n\n`prebuild-install` supports downloading prebuilds from private GitHub repositories using the `-T <github-token>`:\n\n```\n$ prebuild-install -T <github-token>\n```\n\nIf you don't want to use the token on cli you can put it in `~/.prebuild-installrc`:\n\n```\ntoken=<github-token>\n```\n\nAlternatively you can specify it in the `prebuild-install_token` environment variable.\n\nNote that using a GitHub token uses the API to resolve the correct release meaning that you are subject to the ([GitHub Rate Limit](https://developer.github.com/v3/rate_limit/)).\n\n### Create GitHub Token\n\nTo create a token:\n\n* Go to [this page](https://github.com/settings/tokens)\n* Click the `Generate new token` button\n* Give the token a name and click the `Generate token` button, see below\n\n![prebuild-token](https://cloud.githubusercontent.com/assets/13285808/20844584/d0b85268-b8c0-11e6-8b08-2b19522165a9.png)\n\nThe default scopes should be fine.\n\n### Custom binaries\nThe end user can override binary download location through environment variables in their .npmrc file.\nThe variable needs to meet the mask `% your package name %_binary_host` or `% your package name %_binary_host_mirror`. For example:\n```\nleveldown_binary_host=http://overriden-host.com/overriden-path\n```\nNote that the package version subpath and file name will still be appended.\nSo if you are installing `leveldown@1.2.3` the resulting url will be:\n```\nhttp://overriden-host.com/overriden-path/v1.2.3/leveldown-v1.2.3-node-v57-win32-x64.tar.gz\n```\n\n### Cache\n\nAll prebuilt binaries are cached to minimize traffic. So first `prebuild-install` picks binaries from the cache and if no binary could be found, it will be downloaded. Depending on the environment, the cache folder is determined in the following order:\n\n* `${npm_config_cache}/_prebuilds`\n* `${APP_DATA}/npm-cache/_prebuilds`\n* `${HOME}/.npm/_prebuilds`\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/prebuild/prebuild-install.git"
  },
  "scripts": {
    "audit": "nsp check",
    "lint": "standard",
    "test": "verify-travis-appveyor && tape test/*-test.js && npm run audit && npm run lint"
  },
  "version": "4.0.0"
}
